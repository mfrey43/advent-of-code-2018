import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

import org.apache.commons.lang.time.StopWatch;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Day14 {

  public static void main(String[] args) {
    StopWatch stopwatch = new StopWatch();
    stopwatch.start();
    System.out.println(new Day14().part1());
    stopwatch.stop();
    System.out.println("time spent: " + stopwatch.getTime() + "ms");

    stopwatch.reset();
    stopwatch.start();
    System.out.println(new Day14().part2());
    stopwatch.stop();
    System.out.println("time spent: " + stopwatch.getTime() + "ms");
  }

  public String part1() {
    return calculate("37", 323081, 10);
  }

  public String calculate(String input, int startRecipeIndex, int numberOfRecipes) {
    List<Integer> recipes = new ArrayList<>();
    for (String s : input.split("")) {
      recipes.add(Integer.parseInt(s));
    }

    int pos1 = 0;
    int pos2 = 1;
    while (recipes.size() < startRecipeIndex + numberOfRecipes) {
      String[] newRecipes = String.valueOf(recipes.get(pos1) + recipes.get(pos2)).split("");
      for (String newRecipe : newRecipes) {
        recipes.add(Integer.parseInt(newRecipe));
      }
      pos1 = (pos1 + 1 + recipes.get(pos1)) % recipes.size();
      pos2 = (pos2 + 1 + recipes.get(pos2)) % recipes.size();
      if (pos1 == pos2) {
        pos2 = (pos2 + 1) % recipes.size();
      }
    }
    return recipes.subList(startRecipeIndex, startRecipeIndex + numberOfRecipes)
        .stream()
        .map(String::valueOf)
        .collect(Collectors.joining());
  }

  public String part2() {
    String result = calculate("37", 0, 30000000);
    return String.valueOf(result.indexOf("323081"));
  }
}